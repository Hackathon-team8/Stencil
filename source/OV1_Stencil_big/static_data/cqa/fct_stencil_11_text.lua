_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 176 bytes.\nThe binary function is storing 168 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 55\nloop length        : 220\nnb stack references: 0\n",
        },
        {
          title = "Front-end",
          txt = "FIT IN UOP CACHE\nfront end: 6.38 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0   | P1   | P2    | P3    | P4   | P5   | P6   | P7   | P8   | P9   | P10  | P11  | P12  | P13  | P14\n-----------------------------------------------------------------------------------------------------------------\nuops   | 5.00 | 5.00 | 11.00 | 11.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 6.50 | 6.17 | 6.33 | 7.00 | 7.00\ncycles | 5.00 | 5.00 | 11.00 | 11.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 6.50 | 6.17 | 6.33 | 7.00 | 7.00\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 6.38\nOverall L1: 11.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "all     : 36%\nload    : 100%\nstore   : 100%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 11.00 cycles. At this rate:\n - 16% of peak load performance is reached (16.00 out of 96.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 23% of peak store performance is reached (15.27 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 401940\n\nInstruction                                       | Nb FU | P0   | P1   | P2   | P3   | P4 | P5 | P6 | P7 | P8 | P9 | P10  | P11  | P12  | P13  | P14  | Latency | Recip. throughput\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSUB SP, SP, #1520                                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nMOVZ W0, #0                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nSTP X29, X30, [SP]                                | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nADD X29, SP, #0                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nSTP X19, X20, [SP, #16]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X21, X22, [SP, #32]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X23, X24, [SP, #48]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X25, X26, [SP, #64]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X27, X28, [SP, #80]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <10401300>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <104012e0>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <104011e0>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nMOVZ X4, #1                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADRP X0, <420974>                                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nLDR X2, [X0, #616]                                | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 0.33\nADD X6, X29, #1496                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X5, X29, #1488                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nORR X3, XZR, X4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nMOVZ X1, #0                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nORR W0, WZR, W4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nBL <10401170>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nANDS WZR, W0, #448                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.33\nB.EQ 403f68 <_Z13one_iterationv._omp_fn.0+0x2628> | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.50\nSTP D8, D9, [X29, #96]\nSTP D10, D11, [X29, #112]\nSTP D12, D13, [X29, #128]\nSTP D14, D15, [X29, #144]\nLDP D8, D9, [X29, #96]                            | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nLDP D10, D11, [X29, #112]                         | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nLDP D12, D13, [X29, #128]                         | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nLDP D14, D15, [X29, #144]                         | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nBL <104012b0>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nMOVZ X4, #1                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADRP X24, <420f70>                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X6, X29, #1512                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X5, X29, #1504                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nLDR X2, [X24, #616]                               | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 0.33\nORR X3, XZR, X4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nMOVZ X1, #0                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nORR W0, WZR, W4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nBL <10401170>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nANDS WZR, W0, #448                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.33\nB.EQ 404208 <_Z13one_iterationv._omp_fn.0+0x28c8> | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.50\nADRP X23, <420f98>                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X22, X23, #616                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nSTR X22, [X29, #1456]                             | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <10401100>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nLDP X29, X30, [SP]                                | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X19, X20, [SP, #16]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X21, X22, [SP, #32]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X23, X24, [SP, #48]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X25, X26, [SP, #64]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X27, X28, [SP, #80]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nADD SP, SP, #1520                                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nRET                                               | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.50\n",
        },
      },
      header = {
        "Warnings:\n - The number of fused uops of the instruction [STP	D8, D9, [X29, #96]] is unknown\n - The number of fused uops of the instruction [STP	D10, D11, [X29, #112]] is unknown\n - The number of fused uops of the instruction [STP	D12, D13, [X29, #128]] is unknown\n - The number of fused uops of the instruction [STP	D14, D15, [X29, #144]] is unknown\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "0% of peak computational performance is used (0.00 out of 16.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 11.00 to 1.33 cycles (8.25x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA)\n",
          details = "36% of VPU instructions are used in vector version (process two or more data elements in vector registers):\n - 0% of VPU addition or subtraction instructions are used in vector version.\n - 0% of VPU instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is poorly vectorized.\nOnly 32% of vector register length is used (average across all VPU instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 11.00 to 1.87 cycles (5.87x speedup).",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 11.00 to 3.50 cycles (3.14x speedup).",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 176 bytes.\nThe binary function is storing 168 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 55\nloop length        : 220\nnb stack references: 0\n",
        },
        {
          title = "Front-end",
          txt = "FIT IN UOP CACHE\nfront end: 6.38 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0   | P1   | P2    | P3    | P4   | P5   | P6   | P7   | P8   | P9   | P10  | P11  | P12  | P13  | P14\n-----------------------------------------------------------------------------------------------------------------\nuops   | 5.00 | 5.00 | 11.00 | 11.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 6.50 | 6.17 | 6.33 | 7.00 | 7.00\ncycles | 5.00 | 5.00 | 11.00 | 11.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 0.00 | 6.50 | 6.17 | 6.33 | 7.00 | 7.00\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 6.38\nOverall L1: 11.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "all     : 36%\nload    : 100%\nstore   : 100%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 11.00 cycles. At this rate:\n - 16% of peak load performance is reached (16.00 out of 96.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 23% of peak store performance is reached (15.27 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 401940\n\nInstruction                                       | Nb FU | P0   | P1   | P2   | P3   | P4 | P5 | P6 | P7 | P8 | P9 | P10  | P11  | P12  | P13  | P14  | Latency | Recip. throughput\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSUB SP, SP, #1520                                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nMOVZ W0, #0                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nSTP X29, X30, [SP]                                | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nADD X29, SP, #0                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nSTP X19, X20, [SP, #16]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X21, X22, [SP, #32]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X23, X24, [SP, #48]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X25, X26, [SP, #64]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nSTP X27, X28, [SP, #80]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <10401300>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <104012e0>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <104011e0>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nMOVZ X4, #1                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADRP X0, <420974>                                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nLDR X2, [X0, #616]                                | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 0.33\nADD X6, X29, #1496                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X5, X29, #1488                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nORR X3, XZR, X4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nMOVZ X1, #0                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nORR W0, WZR, W4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nBL <10401170>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nANDS WZR, W0, #448                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.33\nB.EQ 403f68 <_Z13one_iterationv._omp_fn.0+0x2628> | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.50\nSTP D8, D9, [X29, #96]\nSTP D10, D11, [X29, #112]\nSTP D12, D13, [X29, #128]\nSTP D14, D15, [X29, #144]\nLDP D8, D9, [X29, #96]                            | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nLDP D10, D11, [X29, #112]                         | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nLDP D12, D13, [X29, #128]                         | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nLDP D14, D15, [X29, #144]                         | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 6       | 0.33\nBL <104012b0>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nMOVZ X4, #1                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADRP X24, <420f70>                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X6, X29, #1512                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X5, X29, #1504                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nLDR X2, [X24, #616]                               | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 0.33\nORR X3, XZR, X4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nMOVZ X1, #0                                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nORR W0, WZR, W4                                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nBL <10401170>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nANDS WZR, W0, #448                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.33\nB.EQ 404208 <_Z13one_iterationv._omp_fn.0+0x28c8> | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.50\nADRP X23, <420f98>                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nADD X22, X23, #616                                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nSTR X22, [X29, #1456]                             | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.50 | 0.50 | 0    | 0.50 | 0.50 | 1       | 0.50\nBL <10401100>                                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0.50 | 0.50 | 1       | 0.50\nLDP X29, X30, [SP]                                | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X19, X20, [SP, #16]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X21, X22, [SP, #32]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X23, X24, [SP, #48]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X25, X26, [SP, #64]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nLDP X27, X28, [SP, #80]                           | 1     | 0    | 0    | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0.33 | 0.33 | 0.33 | 0    | 0    | 4       | 1\nADD SP, SP, #1520                                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.25\nRET                                               | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0  | 0  | 0  | 0  | 0  | 0    | 0    | 0    | 0    | 0    | 1       | 0.50\n",
        },
      },
      header = {
        "Warnings:\n - The number of fused uops of the instruction [STP	D8, D9, [X29, #96]] is unknown\n - The number of fused uops of the instruction [STP	D10, D11, [X29, #112]] is unknown\n - The number of fused uops of the instruction [STP	D12, D13, [X29, #128]] is unknown\n - The number of fused uops of the instruction [STP	D14, D15, [X29, #144]] is unknown\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "0% of peak computational performance is used (0.00 out of 16.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 11.00 to 1.33 cycles (8.25x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA)\n",
          details = "36% of VPU instructions are used in vector version (process two or more data elements in vector registers):\n - 0% of VPU addition or subtraction instructions are used in vector version.\n - 0% of VPU instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is poorly vectorized.\nOnly 32% of vector register length is used (average across all VPU instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 11.00 to 1.87 cycles (5.87x speedup).",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 11.00 to 3.50 cycles (3.14x speedup).",
        },
      },
    },
  common = {
    header = {
      "",
      "Warnings:\nIgnoring paths for analysis",
    },
  },
}
