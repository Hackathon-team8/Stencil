unroll info;unroll confidence level;unroll loop type;unroll factor;is main/unrolled;RecMII;RecMII (best case for DIV/SQRT);comp_str;comp_opts;nb paths;addr;can be analyzed;uop cache capacity;Warnings;path ID;repetitions;extra_unroll_factor;loop length;fit in cache;assumed macro fusion;cycles L1;cycles L1 (best case for DIV/SQRT);cycles L1 if clean;cycles L1 (best case for DIV/SQRT) if clean;cycles L1 if FP arith vectorized;cycles L1 (best case for DIV/SQRT) if FP arith vectorized;cycles L1 if nomem vectorized;cycles L1 (best case for DIV/SQRT) if nomem vectorized;cycles L1 if fully vectorized;cycles L1 (best case for DIV/SQRT) if fully vectorized;cycles L1 if no deps;cycles L1 (best case for DIV/SQRT) if no deps;cycles L1 if hitting next bottleneck;cycles L1 (best case for DIV/SQRT) if hitting next bottleneck;cycles L1 if only FP;cycles L1 (best case for DIV/SQRT) if only FP;cycles L1 if only FP arith;cycles L1 (best case for DIV/SQRT) if only FP arith;bottlenecks;cycles instruction fetch;cycles predecoding;cycles instruction queue;cycles decoding;cycles micro-operation queue;cycles ROB-read;cycles front end;cycles dispatch;cycles P0;cycles P1;cycles P2;cycles P3;cycles P4;cycles P5;cycles P6;cycles P7;cycles P8;cycles P9;cycles P10;cycles P11;cycles P12;cycles P13;cycles P14;uops P0;uops P1;uops P2;uops P3;uops P4;uops P5;uops P6;uops P7;uops P8;uops P9;uops P10;uops P11;uops P12;uops P13;uops P14;cycles div sqrt max;cycles div sqrt min;cycles UFS;cycles UFS (best case for DIV/SQRT);stall cycles;stall cycles (best case for DIV/SQRT);ROB full;RS full;LB full;LM full;LFB full;SB full;PRF_INT full;PRF_FLOAT full;PRF full;nb instructions;nb uops;nb pure loads;nb packed loads;nb impl loads;nb vector unaligned loads;nb stores;nb stack references;nb stack loads;CALL count;nb total FP operations;nb FP add-sub operations;nb FP mul operations;nb FP fma operations;nb FP div operations;nb FP rcp operations;nb FP sqrt operations;nb FP rsqrt operations;FP operations per cycle L1;bytes loaded or stored per cycle L1;bytes loaded or stored per cycle L1 (best case for DIV/SQRT);bytes prefetched;bytes loaded;bytes stored;bytes loaded or stored;bytes wasted;bytes loaded if fully vectorized;bytes loaded if nomem vectorized;bytes loaded if FP arith vectorized;bytes stored if fully vectorized;bytes stored if nomem vectorized;bytes stored if FP arith vectorized;bytes prefetched if fully vectorized;bytes prefetched if nomem vectorized;bytes prefetched if FP arith vectorized;packed ratio all;packed ratio load;packed ratio store;packed ratio mul;packed ratio add_sub;packed ratio fma;packed ratio div_sqrt;packed ratio other;packed ratio INT all;packed ratio INT load;packed ratio INT store;packed ratio INT mul;packed ratio INT add_sub;packed ratio INT fma;packed ratio INT other;packed ratio FP all;packed ratio FP load;packed ratio FP store;packed ratio FP mul;packed ratio FP add_sub;packed ratio FP fma;packed ratio FP div_sqrt;packed ratio FP other;vec eff ratio all;vec eff ratio load;vec eff ratio store;vec eff ratio mul;vec eff ratio add_sub;vec eff ratio fma;vec eff ratio div_sqrt;vec eff ratio other;vec eff ratio INT all;vec eff ratio INT load;vec eff ratio INT store;vec eff ratio INT mul;vec eff ratio INT add_sub;vec eff ratio INT fma;vec eff ratio INT other;vec eff ratio FP all;vec eff ratio FP load;vec eff ratio FP store;vec eff ratio FP mul;vec eff ratio FP add_sub;vec eff ratio FP fma;vec eff ratio FP div_sqrt;vec eff ratio FP other;stride_0;stride_1;stride_n;stride_unknown;stride_indirect;array count;Nb_FLOP_add_sub;Nb_FLOP_div;Nb_FLOP_mul;Nb_FLOP_fma;Nb_FLOP_rcp;Nb_FLOP_sqrt;Nb_FLOP_rsqrt;Nb_8_bits_loads;Nb_8_bits_stores;Nb_16_bits_loads;Nb_16_bits_stores;Nb_32_bits_loads;Nb_32_bits_stores;Nb_64_bits_loads;Nb_64_bits_stores;Nb_128_bits_loads;Nb_128_bits_stores;Nb_256_bits_loads;Nb_256_bits_stores;Nb_512_bits_loads;Nb_512_bits_stores;Nb_MOVH/LPS/D_loads;Nb_MOVH/LPS/D_stores;used x86 registers;used mmx registers;used xmm registers;used ymm registers;used zmm registers;bytes moved registers;bytes moved GP registers data read;bytes moved GP registers data write;bytes moved GP registers addr read;bytes moved GP registers addr write;bytes moved SIMD registers read;bytes moved SIMD registers write;Nb_insn_ADD/SUBPD_XMM;Nb_insn_ADD/SUBPD_YMM;Nb_insn_ADD/SUBPD_ZMM;Nb_insn_ADD/SUBPS_XMM;Nb_insn_ADD/SUBPS_YMM;Nb_insn_ADD/SUBPS_ZMM;Nb_insn_ADD/SUBSD;Nb_insn_ADD/SUBSS;Nb_insn_DIVPD_XMM;Nb_insn_DIVPD_YMM;Nb_insn_DIVPD_ZMM;Nb_insn_DIVPS_XMM;Nb_insn_DIVPS_YMM;Nb_insn_DIVPS_ZMM;Nb_insn_DIVSD;Nb_insn_DIVSS;Nb_insn_FMAPD_XMM;Nb_insn_FMAPD_YMM;Nb_insn_FMAPD_ZMM;Nb_insn_FMAPS_XMM;Nb_insn_FMAPS_YMM;Nb_insn_FMAPS_ZMM;Nb_insn_FMASD;Nb_insn_FMASS;Nb_insn_MULPD_XMM;Nb_insn_MULPD_YMM;Nb_insn_MULPD_ZMM;Nb_insn_MULPS_XMM;Nb_insn_MULPS_YMM;Nb_insn_MULPS_ZMM;Nb_insn_MULSD;Nb_insn_MULSS;Nb_insn_SQRTPD_XMM;Nb_insn_SQRTPD_YMM;Nb_insn_SQRTPD_ZMM;Nb_insn_SQRTPS_XMM;Nb_insn_SQRTPS_YMM;Nb_insn_SQRTPS_ZMM;Nb_insn_SQRTSD;Nb_insn_SQRTSS;Nb_insn_RSQRTPD_XMM;Nb_insn_RSQRTPD_YMM;Nb_insn_RSQRTPD_ZMM;Nb_insn_RSQRTPS_XMM;Nb_insn_RSQRTPS_YMM;Nb_insn_RSQRTPS_ZMM;Nb_insn_RSQRTSD;Nb_insn_RSQRTSS;Nb_insn_RCPPD_XMM;Nb_insn_RCPPD_YMM;Nb_insn_RCPPD_ZMM;Nb_insn_RCPPS_XMM;Nb_insn_RCPPS_YMM;Nb_insn_RCPPS_ZMM;Nb_insn_RCPSD;Nb_insn_RCPSS;Nb_insn_SS2SD;Nb_insn_SD2SS;Nb_insn_PS2PD-XMM;Nb_insn_PS2PD-YMM;Nb_insn_PS2PD-ZMM;Nb_insn_PD2PS-XMM;Nb_insn_PD2PS-YMM;Nb_insn_PD2PS-ZMM;Nb_insn_INSERT/EXTRACT;Nb_insn_COMPRESS/EXPAND_XMM;Nb_insn_COMPRESS/EXPAND_YMM;Nb_insn_COMPRESS/EXPAND_ZMM;Nb_insn_MMX_to/from;Nb_insn_BLEND/MERGE_XMM;Nb_insn_BLEND/MERGE_YMM;Nb_insn_BLEND/MERGE_ZMM;Nb_insn_SHUFFLE/PERM_XMM;Nb_insn_SHUFFLE/PERM_YMM;Nb_insn_SHUFFLE/PERM_ZMM;Nb_insn_BROADCAST_XMM;Nb_insn_BROADCAST_YMM;Nb_insn_BROADCAST_ZMM;Nb_insn_GATHER/SCATTER_XMM;Nb_insn_GATHER/SCATTER_YMM;Nb_insn_GATHER/SCATTER_ZMM;Nb_insn_MASKMOV/MOV2M_XMM;Nb_insn_MASKMOV/MOV2M_YMM;Nb_insn_MASKMOV/MOV2M_ZMM;Nb_insn_Other_packing_XMM;Nb_insn_Other_packing_YMM;Nb_insn_Other_packing_ZMM;Nb INT arith insn: ADD/SUB-XMM;Nb INT arith insn: ADD/SUB-YMM;Nb INT arith insn: ADD/SUB-ZMM;Nb INT arith insn: CMP-XMM;Nb INT arith insn: CMP-YMM;Nb INT arith insn: CMP-ZMM;Nb INT arith insn: MUL-XMM;Nb INT arith insn: MUL-YMM;Nb INT arith insn: MUL-ZMM;Nb INT arith insn: FMA-XMM;Nb INT arith insn: FMA-YMM;Nb INT arith insn: FMA-ZMM;Nb INT arith insn: SAD-XMM;Nb INT arith insn: SAD-YMM;Nb INT arith insn: SAD-ZMM;Nb INT arith insn: OTHER-XMM;Nb INT arith insn: OTHER-YMM;Nb INT arith insn: OTHER-ZMM;Nb INT logic insn: TEST-XMM;Nb INT logic insn: TEST-YMM;Nb INT logic insn: TEST-ZMM;Nb INT logic insn: AND-XMM;Nb INT logic insn: AND-YMM;Nb INT logic insn: AND-ZMM;Nb INT logic insn: ANDN-XMM;Nb INT logic insn: ANDN-YMM;Nb INT logic insn: ANDN-ZMM;Nb INT logic insn: XOR-XMM;Nb INT logic insn: XOR-YMM;Nb INT logic insn: XOR-ZMM;Nb INT logic insn: OR-XMM;Nb INT logic insn: OR-YMM;Nb INT logic insn: OR-ZMM;Nb INT logic insn: SHIFT-XMM;Nb INT logic insn: SHIFT-YMM;Nb INT logic insn: SHIFT-ZMM;Nb INT other insn: XMM;Nb INT other insn: YMM;Nb INT other insn: ZMM;Nb scalar IOP: add-sub;Nb scalar IOP: cmp;Nb scalar IOP: mul;Nb scalar IOP: div;nb scalar INT operations;Nb SIMD IOP: add-sub;Nb SIMD IOP: cmp;Nb SIMD IOP: mul;Nb SIMD IOP: fma;Nb SIMD IOP;Nb scalar INT arith insn: ADD/SUB;Nb scalar INT arith insn: CMP;Nb scalar INT arith insn: MUL;Nb scalar INT arith insn: OTHER;Nb scalar INT logic insn: AND;Nb scalar INT logic insn: XOR;Nb scalar INT logic insn: OR;Nb scalar INT logic insn: SHIFT;nb scalar INT other insns;Nb loop control insns;Nb masked instructions;ID;MAQAO Nb Path;
NA;NA;NA;NA;NA;0;0;NA;NA;4;401cac;true;2000;;1;1;NA;884;Yes (uop cache);false;48;48;7.6666666666667;7.6666666666667;48;48;12.833333333333;12.833333333333;12;12;NA;NA;35.333333333333;35.333333333333;4;4;4;4;P2, P3, ;NA;NA;NA;NA;27.5;NA;27.5;48;1;1;48;48;2;0;3.5;3.5;3.5;3.5;35.333333333333;35.333333333333;35.333333333333;15;15;1;1;48;48;2;0;3.5;3.5;3.5;3.5;35.333333333333;35.333333333333;35.333333333333;15;15;0;0;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;221;220;NA;12;NA;NA;30;0;0;0;14;0;14;0;0;0;0;0;0.29, 0.29, ;19.666666666667;19.666666666667;0;704;240;944;0;608;536;704;240;240;240;0;0;0;17.142857142857;75;NA;NA;0;0;NA;0;17.142857142857;75;NA;NA;0;0;0;NA;NA;NA;NA;NA;NA;NA;NA;29.285714285714;43.75;NA;NA;25;25;NA;25;29.285714285714;43.75;NA;NA;25;25;25;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;0;0;0;14;0;0;0;0;0;0;0;0;0;0;64;30;12;0;0;0;0;0;0;0;NA;NA;NA;NA;NA;4168;1656;1488;944;80;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;48;3;0;0;51;0;0;0;0;0;48;3;0;0;0;0;0;0;2;15;NA;8;40;
NA;NA;NA;NA;NA;0;0;NA;NA;4;401cac;true;2000;;2;1;NA;3516;Yes (uop cache);false;148.16666666667;148.16666666667;80.833333333333;80.833333333333;111.83333333333;111.83333333333;93.75;93.75;39.708333333333;39.708333333333;NA;NA;148;148;9;9;41.75;56;P10, ;NA;NA;NA;NA;108.875;NA;108.875;148.16666666667;2;2;126;126;4;0;54;54;54;54;148.16666666667;147.83333333333;148;48;48;2;2;126;126;4;0;54;54;54;54;148.16666666667;147.83333333333;148;48;48;28;56;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;879;871;NA;32;NA;NA;145;0;0;0;181;48;77;0;56;0;0;0;1.22, 1.22, ;26.186726659168;26.186726659168;0;2704;1176;3880;0;2448;1444;1864;1176;940.8;980;0;0;0;18.367346938776;17.977528089888;0;100;0;0;NA;61.538461538462;14.285714285714;17.977528089888;0;NA;0;0;61.538461538462;100;NA;NA;100;NA;NA;NA;NA;29.591836734694;29.494382022472;25;50;25;25;NA;40.384615384615;28.571428571429;29.494382022472;25;NA;25;25;40.384615384615;50;NA;NA;50;NA;NA;NA;NA;NA;NA;NA;NA;NA;0;48;56;77;0;0;0;0;0;0;0;0;0;0;260;143;39;2;0;0;0;0;0;0;NA;NA;NA;NA;NA;18632;4240;3896;8104;2392;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;175;4;0;0;179;0;0;0;0;0;175;4;0;0;0;0;0;0;3;34;NA;8;40;
NA;NA;NA;NA;NA;0;0;NA;NA;4;401cac;true;2000;;3;1;NA;4180;Yes (uop cache);false;169.66666666667;169.66666666667;86.5;86.5;125.41666666667;125.41666666667;103.20833333333;103.20833333333;46.083333333333;46.083333333333;NA;NA;169;169;12;12;45.25;56;P10, P11, P12, ;NA;NA;NA;NA;129.625;NA;129.625;169.66666666667;2.5;2.5;169;169;4;0;57.5;57.5;57.5;57.5;169.66666666667;169.66666666667;169.66666666667;54.5;54.5;2.5;2.5;169;169;4;0;57.5;57.5;57.5;57.5;169.66666666667;169.66666666667;169.66666666667;54.5;54.5;28;56;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;1045;1037;NA;44;NA;NA;158;0;0;0;195;48;91;0;56;0;0;0;1.15, 1.15, ;26.499017681729;26.499017681729;0;3216;1280;4496;0;2864;1788;2264;1280;1044.8;1084;0;0;0;19.939577039275;22.680412371134;0;100;0;0;NA;61.538461538462;16.403785488959;22.680412371134;0;NA;0;0;61.538461538462;100;NA;NA;100;NA;NA;NA;NA;29.984894259819;30.670103092784;25;50;25;25;NA;40.384615384615;29.10094637224;30.670103092784;25;NA;25;25;40.384615384615;50;NA;NA;50;NA;NA;NA;NA;NA;NA;NA;NA;NA;0;48;56;91;0;0;0;0;0;0;0;0;0;0;300;156;51;2;0;0;0;0;0;0;NA;NA;NA;NA;NA;21904;4960;4688;9344;2912;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;224;4;0;0;228;0;0;0;0;0;224;4;0;0;0;0;0;0;4;41;NA;8;40;
NA;NA;NA;NA;NA;0;0;NA;NA;4;401cac;true;2000;;4;1;NA;4160;Yes (uop cache);false;169;169;85.833333333333;85.833333333333;125.08333333333;125.08333333333;103.04166666667;103.04166666667;45.916666666667;45.916666666667;NA;NA;168;168;11.5;11.5;45.25;56;P10, P11, P12, ;NA;NA;NA;NA;129;NA;129;169;2;2;168;168;4;0;57.5;57.5;57.5;57.5;169;169;169;54.5;54.5;2;2;168;168;4;0;57.5;57.5;57.5;57.5;169;169;169;54.5;54.5;28;56;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;1040;1032;NA;44;NA;NA;158;0;0;0;195;48;91;0;56;0;0;0;1.15, 1.15, ;26.508875739645;26.508875739645;0;3200;1280;4480;0;2848;1772;2248;1280;1044.8;1084;0;0;0;19.354838709677;22.680412371134;0;100;0;0;NA;61.538461538462;15.902140672783;22.680412371134;0;NA;0;0;61.538461538462;100;NA;NA;100;NA;NA;NA;NA;29.838709677419;30.670103092784;25;50;25;25;NA;40.384615384615;28.975535168196;30.670103092784;25;NA;25;25;40.384615384615;50;NA;NA;50;NA;NA;NA;NA;NA;NA;NA;NA;NA;0;48;56;91;0;0;0;0;0;0;0;0;0;0;298;156;51;2;0;0;0;0;0;0;NA;NA;NA;NA;NA;21832;4944;4680;9312;2896;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;222;4;0;0;226;0;0;0;0;0;222;4;0;0;0;0;0;0;3;38;NA;8;40;
NA;NA;NA;NA;NA;0;0;NA;NA;4;401cac;true;2000;;AVG;1;NA;3185;NA;NA;133.70833333333;133.70833333333;65.208333333333;65.208333333333;102.58333333333;102.58333333333;78.208333333333;78.208333333333;35.927083333333;35.927083333333;NA;NA;130.08333333333;130.08333333333;9.125;9.125;34.0625;43;;NA;NA;NA;NA;98.75;NA;98.75;133.70833333333;1.875;1.875;127.75;127.75;3.5;0;43.125;43.125;43.125;43.125;130.54166666667;130.45833333333;130.5;43;43;1.875;1.875;127.75;127.75;3.5;0;43.125;43.125;43.125;43.125;130.54166666667;130.45833333333;130.5;43;43;21;42;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;796.25;790;NA;33;NA;NA;122.75;0;0;0;146.25;36;68.25;0;42;0;0;0;0.95, 0.95, ;24.715321686802;24.715321686802;0;2456;994;NA;0;2192;1385;1770;994;817.6;847;0;0;0;18.701154957646;34.584588208039;0;100;0;0;NA;46.153846153846;15.933624397578;34.584588208039;0;NA;0;0;46.153846153846;100;NA;NA;100;NA;NA;NA;NA;29.675288739412;33.64614705201;25;50;25;25;NA;36.538461538462;28.983406099395;33.64614705201;25;NA;25;25;36.538461538462;50;NA;NA;50;NA;NA;NA;NA;NA;NA;NA;NA;NA;0;36;42;68.25;0;0;0;0;0;0;0;0;0;0;230.5;121.25;38.25;1.5;0;0;0;0;0;0;NA;NA;NA;NA;NA;16634;3950;3688;6926;2070;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;167.25;3.75;0;0;171;0;0;0;0;0;167.25;3.75;0;0;0;0;0;0;3;32;NA;8;40;
